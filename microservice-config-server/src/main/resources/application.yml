server:
  port: 8888
spring:
  cloud:
    config:
      server:
        git:
         # uri: https://github.com/hoobzhu/{application}  #一个微服务一个仓库
          uri: https://github.com/hoobzhu/manger-config
          search-paths: "microservice2.x/{application}" 
          force-pull: true 
  application:
    name: config-server
  rabbitmq: 
    host: localhost
    port: 5672
    username: hoob
    password: zhuqinhe
eureka:
  client:
    healthcheck:
      enabled: false
    serviceUrl:
      defaultZone: http://hoob:hoobzhu@localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 30 #eureka客户端需要向eureka服务器发送心跳以指示它仍然存在的频率（以秒为单位）默认30 ，生成环境不建议修改    
    # 表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
    # 默认为90秒
    # 如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    # 如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    # 该值至少应该大于 leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10

management:
  endpoints:
    web:
      exposure:
        include: bus-refresh
